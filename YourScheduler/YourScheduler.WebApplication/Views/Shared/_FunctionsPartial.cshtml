@using Microsoft.AspNetCore.Identity
@using YourScheduler.BusinessLogic.Services.Interfaces;
@using YourScheduler.Infrastructure.Entities;
@using YourScheduler.BusinessLogic.Models.DTOs;
@*@model UserDto*@

@inject SignInManager<ApplicationUser> SignInManager

<ul class="navbar-nav flex-grow-1">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item team-event-list">
        <button id="logout" type="submit" class="nav-link btn btn-link text-dark nav-button">Wydarzenia</button>
        <ul>
            <li>
                <a class="nav-link active text-dark" asp-area="" asp-controller="Event" asp-action="GetAllEvents">Dostępne wydarzenia</a>
            </li>

            <li>
                <a class="nav-link text-dark" asp-controller="Event" asp-action="GetUserEvents">Moje wydarzenia</a>
            </li>

            <li>
                <a class="nav-link text-dark" asp-controller="Event" asp-action="Create" >Stwórz nowe wydarzenie</a>
            </li>
        </ul>
    </li>

        <li class="nav-item team-event-list">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark nav-button">Zespoły</button>
        <ul>
            <li>
                <a class="nav-link text-dark" asp-area="" asp-controller="Team" asp-action="GetAllTeams">Dostępne zespoły</a>
            </li>

            <li>
                <a class="nav-link text-dark" asp-controller="Team" asp-action="GetUserTeams" >Moje zespoły</a> 
            </li>

            <li>
                <a class="nav-link text-dark" asp-controller="Team" asp-action="Create" >Stwórz nowy zespół</a>
            </li>
        </ul>                  
    </li>
}
</ul>