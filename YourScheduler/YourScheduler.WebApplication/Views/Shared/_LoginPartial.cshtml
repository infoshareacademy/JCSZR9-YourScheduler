@using Microsoft.AspNetCore.Identity
@using YourScheduler.BusinessLogic.Services.Interfaces;
@using YourScheduler.Infrastructure.Entities

@inject IUserService UserService
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item user-panel-list">
        <span class="userInfo">
            <img src="/Pictures/login2.png" id="UserPicture"/>
            <a id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserService.GetUserByEmail(UserManager.GetUserName(User)).Displayname</a>
        </span>
        
         
        <ul>
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index">Dane użytkownika</a>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Wyloguj się</button>
                </form>
            </li>
        </ul>
    </li>
    
}
else
{
    <li class="nav-item user-panel-list">
        <span class="userInfo">
            <img src="/Pictures/login2.png" id="UserPicture"/>
        </span>
        <ul>
            <li>
                <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Rejestracja</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Logowanie</a>
            </li>
        </ul>
    </li>
}
</ul>
